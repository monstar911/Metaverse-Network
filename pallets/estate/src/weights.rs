
//! Autogenerated weights for `estate`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2021-11-03, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 128

// Executed Command:
// ./target/release/metaverse-node
// benchmark
// --pallet=estate
// --extrinsic=*
// --steps=20
// --repeat=10
// --execution=wasm
// --wasm-execution=compiled
// --raw
// --output
// ./pallets/estate/src/weights.rs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `estate`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> estate::WeightInfo for WeightInfo<T> {
	// Storage: Estate MaxBounds (r:0 w:1)
	fn set_max_bounds() -> Weight {
		(30_000_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Estate MaxBounds (r:1 w:0)
	// Storage: Estate LandUnits (r:1 w:1)
	// Storage: Estate AllLandUnitsCount (r:1 w:1)
	fn mint_land() -> Weight {
		(57_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Estate MaxBounds (r:1 w:0)
	// Storage: Estate LandUnits (r:2 w:2)
	// Storage: Estate AllLandUnitsCount (r:1 w:1)
	fn mint_lands() -> Weight {
		(73_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Auction ItemsInAuction (r:1 w:0)
	// Storage: Estate LandUnits (r:1 w:1)
	fn transfer_land() -> Weight {
		(50_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Estate NextEstateId (r:1 w:1)
	// Storage: Estate MaxBounds (r:1 w:0)
	// Storage: Estate LandUnits (r:1 w:1)
	// Storage: Estate AllEstatesCount (r:1 w:1)
	// Storage: Estate EstateOwner (r:0 w:1)
	// Storage: Estate Estates (r:0 w:1)
	fn mint_estate() -> Weight {
		(73_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
	}
	// Storage: Estate NextEstateId (r:1 w:1)
	// Storage: Estate MaxBounds (r:1 w:0)
	// Storage: Estate LandUnits (r:2 w:2)
	// Storage: Estate AllEstatesCount (r:1 w:1)
	// Storage: Estate EstateOwner (r:0 w:1)
	// Storage: Estate Estates (r:0 w:1)
	fn create_estate() -> Weight {
		(94_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(6 as Weight))
	}
	// Storage: Auction ItemsInAuction (r:1 w:0)
	// Storage: Estate EstateOwner (r:1 w:2)
	fn transfer_estate() -> Weight {
		(50_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Estate NextUndeployedLandBlockId (r:1 w:1)
	// Storage: Estate TotalUndeployedLandUnit (r:1 w:1)
	// Storage: Estate UndeployedLandBlocks (r:0 w:1)
	// Storage: Estate UndeployedLandBlocksOwner (r:0 w:1)
	fn issue_undeployed_land_blocks() -> Weight {
		(49_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Estate UndeployedLandBlocks (r:1 w:1)
	fn freeze_undeployed_land_blocks() -> Weight {
		(37_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Estate UndeployedLandBlocks (r:1 w:1)
	fn unfreeze_undeployed_land_blocks() -> Weight {
		(37_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Estate UndeployedLandBlocks (r:1 w:1)
	// Storage: Estate TotalUndeployedLandUnit (r:1 w:1)
	// Storage: Estate UndeployedLandBlocksOwner (r:0 w:1)
	fn burn_undeployed_land_blocks() -> Weight {
		(51_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Estate UndeployedLandBlocks (r:1 w:1)
	fn approve_undeployed_land_blocks() -> Weight {
		(40_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Estate UndeployedLandBlocks (r:1 w:1)
	fn unapprove_undeployed_land_blocks() -> Weight {
		(36_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Estate UndeployedLandBlocks (r:1 w:1)
	// Storage: Estate UndeployedLandBlocksOwner (r:0 w:2)
	fn transfer_undeployed_land_blocks() -> Weight {
		(47_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
}
